<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->

	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>classpath:tiles/tiles_*.xml</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="preparerFactoryClass"
			value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory" />
	</beans:bean>
	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>



	<context:component-scan base-package="com.meal" />

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/*.do" />
			<mvc:mapping path="/*/*.do" />
			<mvc:mapping path="/*/*/*.do" />
			<mvc:mapping path="/*/*/*/*.do" />
			<mvc:mapping path="/*/*/*/*/*.do" />
			<beans:bean
				class="com.meal.common.interceptor.InterCeptor1" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<beans:bean id="loggerInterceptor"
				class="com.meal.common.logger.LoggerInterCeptor">
			</beans:bean>
		</mvc:interceptor>

	</mvc:interceptors>
	<!-- 멀티파트 리졸버 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="52428800" />
		<beans:property name="maxInMemorySize" value="52428800" />
		<beans:property name="defaultEncoding" value="utf-8" />
	</beans:bean>


	<!-- task:scheduler -->
	<task:annotation-driven scheduler="scheduler" />
	<task:scheduler id="scheduler" pool-size="10" />

<!-- AJAX MODELANDVIEW -->
<beans:bean id="beanNameResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="3" />
<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
    <beans:property name="contentType" value="application/json;charset=UTF-8"></beans:property>
</beans:bean>






</beans:beans>
